{"version":3,"sources":["shortcode-tokenizer.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","getTokenType","str","CLOSE","length","SELF_CLOSING","OPEN","castValue","value","replace","test","parseFloat","toLowerCase","thisIsNotDefined","_typeof","Object","defineProperty","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","Symbol","iterator","obj","constructor","TEXT","ERROR","RX_KEY","RX_PARAM","RX_PARAMS","RX_ENCLOSURE","RX_OPEN","RX_SELFCLOSING","RX_CLOSE","rxParams","RegExp","substring","rxEnclosure","rxOpen","rxClose","rxSelfclosing","Token","type","body","pos","arguments","undefined","name","children","params","isClosed","init","match","matchBody","initName","initParams","paramStr","reduce","paramToken","trim","equal","indexOf","rx","SyntaxError","token","ShortcodeTokenizer","input","strict","buf","originalBuf","_input","Error","regeneratorRuntime","mark","tokens","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","wrap","_context","prev","next","_next","Array","isArray","done","t0","return","finish","stop","from","ast","stack","parent","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","canClose","pop","err","index","default","assign"],"mappings":"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","file":"shortcode-tokenizer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shortcodeTokenizer\"] = factory();\n\telse\n\t\troot[\"shortcodeTokenizer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/* tokens */\n\tvar TEXT = 'TEXT';\n\tvar ERROR = 'ERROR';\n\tvar OPEN = 'OPEN';\n\tvar CLOSE = 'CLOSE';\n\tvar SELF_CLOSING = 'SELF_CLOSING';\n\t\n\t/* eslint-disable */\n\t\n\t/* matches code name */\n\tvar RX_KEY = '[a-zA-Z][a-zA-Z0-9_-]*';\n\t\n\t/* matches paramters */\n\tvar RX_PARAM = RX_KEY + '=\\\\d+\\\\.\\\\d+' + // floats\n\t'|' + RX_KEY + '=\\\\d+' + // ints\n\t'|' + RX_KEY + '=\"[^\\\\]\"]*\"' + // double-qouted strings\n\t'|' + RX_KEY + '=\\'[^\\\\]\\']*\\'' + // single-qouted strings\n\t'|' + RX_KEY; // flags\n\tvar RX_PARAMS = '(?:(?:' + RX_PARAM + ')(?:(?!\\\\s+/?\\\\])\\\\s|))+';\n\t\n\t/* matches all code token types, used for quickly\n\t   finding potentia code tokens */\n\tvar RX_ENCLOSURE = '\\\\[\\\\/?[a-zA-Z][^\\\\]]+\\\\]';\n\t/* matches opening code tokens [row] */\n\tvar RX_OPEN = '\\\\[(' + RX_KEY + ')(\\\\s' + RX_PARAMS + ')?\\\\]';\n\t/* matches self-closing code tokens [row/] */\n\tvar RX_SELFCLOSING = '\\\\[(' + RX_KEY + ')(\\\\s' + RX_PARAMS + ')?\\\\s?\\\\/\\\\]';\n\t/* matches close code tokens [/row] */\n\tvar RX_CLOSE = '\\\\[\\\\/(' + RX_KEY + ')\\\\]';\n\t\n\t/* case-insensitive regular expressions */\n\tvar rxParams = new RegExp(RX_PARAMS.substring(0, RX_PARAMS.length - 1), 'ig');\n\tvar rxEnclosure = new RegExp(RX_ENCLOSURE, 'i');\n\tvar rxOpen = new RegExp(RX_OPEN, 'i');\n\tvar rxClose = new RegExp(RX_CLOSE, 'i');\n\tvar rxSelfclosing = new RegExp(RX_SELFCLOSING, 'i');\n\t\n\t/* eslint-enable */\n\t\n\t/**\n\t * Get token type based on token-string.\n\t *\n\t * Note: assuming that this is not a TEXT token\n\t *\n\t * @returns {string} token type\n\t */\n\tfunction getTokenType(str) {\n\t  if (str[1] === '/') {\n\t    return CLOSE;\n\t  }\n\t  if (str[str.length - 2] === '/') {\n\t    return SELF_CLOSING;\n\t  }\n\t  return OPEN;\n\t}\n\t\n\t/**\n\t * Casts input string to native types.\n\t *\n\t * @returns {mixed} mixed value\n\t */\n\tfunction castValue(value) {\n\t  value = value.replace(/(^['\"]|['\"]$)/g, '');\n\t  if (/^\\d+$/.test(value)) return +value;\n\t  if (/^\\d+.\\d+$/.test(value)) return parseFloat(value);\n\t  if (/^(true|false|yes|no)$/i.test(value)) {\n\t    value = value.toLowerCase();\n\t    return value === 'true' || value === 'yes';\n\t  }\n\t  if (value === 'undefined') return typeof thisIsNotDefined === 'undefined' ? 'undefined' : _typeof(thisIsNotDefined);\n\t  if (value === 'null') return null;\n\t  return value;\n\t}\n\t\n\t/**\n\t * Token class is used both as a token during tokenization/lexing\n\t * and as a node in the resulting AST.\n\t *\n\t * @private\n\t */\n\t\n\tvar Token = exports.Token = function () {\n\t  function Token(type, body) {\n\t    var pos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t    _classCallCheck(this, Token);\n\t\n\t    this.name = null;\n\t    this.type = type;\n\t    this.body = body;\n\t    this.pos = pos;\n\t    this.children = [];\n\t    this.params = {};\n\t    this.isClosed = type === SELF_CLOSING;\n\t    this.init();\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t\n\t\n\t  _createClass(Token, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      if (this.type !== TEXT && this.type !== ERROR) {\n\t        var match = this.matchBody();\n\t        this.initName(match);\n\t        if (match[2]) {\n\t          this.initParams(match[2]);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'initName',\n\t    value: function initName(match) {\n\t      this.name = match[1];\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'initParams',\n\t    value: function initParams(paramStr) {\n\t      var match = paramStr.match(rxParams);\n\t      this.params = match.reduce(function (params, paramToken) {\n\t        paramToken = paramToken.trim();\n\t        var equal = paramToken.indexOf('=');\n\t        if (!~equal) {\n\t          params[paramToken] = true;\n\t        } else {\n\t          params[paramToken.substring(0, equal)] = castValue(paramToken.substring(equal + 1));\n\t        }\n\t        return params;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     */\n\t\n\t  }, {\n\t    key: 'matchBody',\n\t    value: function matchBody() {\n\t      var rx = void 0;\n\t      if (this.type === CLOSE) {\n\t        rx = rxClose;\n\t      } else if (this.type === OPEN) {\n\t        rx = rxOpen;\n\t      } else if (this.type === SELF_CLOSING) {\n\t        rx = rxSelfclosing;\n\t      } else {\n\t        throw new SyntaxError('Unknown token: ' + this.type);\n\t      }\n\t\n\t      var match = this.body.match(rx);\n\t      if (match === null) {\n\t        throw new SyntaxError('Invalid ' + this.type + ' token: ' + this.body);\n\t      }\n\t      return match;\n\t    }\n\t\n\t    /**\n\t     * Determines if this token can close the param token.\n\t     *\n\t     * @public\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'canClose',\n\t    value: function canClose(token) {\n\t      return this.name === token.name;\n\t    }\n\t  }]);\n\t\n\t  return Token;\n\t}();\n\t\n\tvar ShortcodeTokenizer = function () {\n\t\n\t  /**\n\t   * Creates a new tokenizer.\n\t   *\n\t   * Pass in input as first param or later using `input()`\n\t   *\n\t   * @param {string} Optional input to tokenize\n\t   * @param {boolean} Strict mode default on\n\t   */\n\t  function ShortcodeTokenizer() {\n\t    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t    var strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t    _classCallCheck(this, ShortcodeTokenizer);\n\t\n\t    this.strict = strict;\n\t    this.buf = null;\n\t    this.originalBuf = null;\n\t    this.pos = 0;\n\t    if (input) {\n\t      this.input(input);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Sets input buffer with a new input string.\n\t   *\n\t   * @throws {Error} Invalid input\n\t   * @returns {this} returns this for chaining\n\t   */\n\t\n\t\n\t  _createClass(ShortcodeTokenizer, [{\n\t    key: 'input',\n\t    value: function input(_input) {\n\t      if (typeof _input !== 'string') {\n\t        throw new Error('Invalid input');\n\t      }\n\t\n\t      this.buf = this.originalBuf = _input;\n\t      this.pos = 0;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Resets input buffer and position to their origial values.\n\t     *\n\t     * @returns {this} returns this for chaining\n\t     */\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.buf = this.originalBuf;\n\t      this.pos = 0;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a token generator.\n\t     *\n\t     * @throws {Error} Invalid input\n\t     * @returns {*function} token generator\n\t     */\n\t\n\t  }, {\n\t    key: 'tokens',\n\t    value: regeneratorRuntime.mark(function tokens() {\n\t      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      var tokens, token, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step;\n\t\n\t      return regeneratorRuntime.wrap(function tokens$(_context) {\n\t        while (1) {\n\t          switch (_context.prev = _context.next) {\n\t            case 0:\n\t              if (input) {\n\t                this.input(input);\n\t              }\n\t\n\t              if (!(typeof this.buf !== 'string')) {\n\t                _context.next = 3;\n\t                break;\n\t              }\n\t\n\t              throw new Error('Invalid input');\n\t\n\t            case 3:\n\t              tokens = [];\n\t              token = void 0;\n\t\n\t            case 5:\n\t              if (!((tokens = this._next()) !== null)) {\n\t                _context.next = 35;\n\t                break;\n\t              }\n\t\n\t              tokens = Array.isArray(tokens) ? tokens : [tokens];\n\t              _iteratorNormalCompletion = true;\n\t              _didIteratorError = false;\n\t              _iteratorError = undefined;\n\t              _context.prev = 10;\n\t              _iterator = tokens[Symbol.iterator]();\n\t\n\t            case 12:\n\t              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n\t                _context.next = 19;\n\t                break;\n\t              }\n\t\n\t              token = _step.value;\n\t              _context.next = 16;\n\t              return token;\n\t\n\t            case 16:\n\t              _iteratorNormalCompletion = true;\n\t              _context.next = 12;\n\t              break;\n\t\n\t            case 19:\n\t              _context.next = 25;\n\t              break;\n\t\n\t            case 21:\n\t              _context.prev = 21;\n\t              _context.t0 = _context['catch'](10);\n\t              _didIteratorError = true;\n\t              _iteratorError = _context.t0;\n\t\n\t            case 25:\n\t              _context.prev = 25;\n\t              _context.prev = 26;\n\t\n\t              if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t              }\n\t\n\t            case 28:\n\t              _context.prev = 28;\n\t\n\t              if (!_didIteratorError) {\n\t                _context.next = 31;\n\t                break;\n\t              }\n\t\n\t              throw _iteratorError;\n\t\n\t            case 31:\n\t              return _context.finish(28);\n\t\n\t            case 32:\n\t              return _context.finish(25);\n\t\n\t            case 33:\n\t              _context.next = 5;\n\t              break;\n\t\n\t            case 35:\n\t            case 'end':\n\t              return _context.stop();\n\t          }\n\t        }\n\t      }, tokens, this, [[10, 21, 25, 33], [26,, 28, 32]]);\n\t    })\n\t\n\t    /**\n\t     * Convenience function for getting all tokens.\n\t     *\n\t     * @see tokens\n\t     * @returns {array} an array of tokens\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokens',\n\t    value: function getTokens() {\n\t      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      return Array.from(this.tokens(input));\n\t    }\n\t\n\t    /**\n\t     * Uses the tokens generator to build an AST from the tokens.\n\t     *\n\t     * @see tokens\n\t     * @returns {array} an array of AST roots\n\t     */\n\t\n\t  }, {\n\t    key: 'ast',\n\t    value: function ast() {\n\t      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      var tokens = this.tokens(input);\n\t      var stack = [];\n\t      var ast = [];\n\t      var parent = null;\n\t      var token = void 0;\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = tokens[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          token = _step2.value;\n\t\n\t          if (token.type === TEXT) {\n\t            if (!parent) {\n\t              ast.push(token);\n\t            } else {\n\t              parent.children.push(token);\n\t            }\n\t          } else if (token.type === OPEN) {\n\t            if (!parent) {\n\t              parent = token;\n\t              ast.push(parent);\n\t            } else {\n\t              parent.children.push(token);\n\t              stack.push(parent);\n\t              parent = token;\n\t            }\n\t          } else if (token.type === CLOSE) {\n\t            if (!parent || !token.canClose(parent)) {\n\t              if (this.strict) {\n\t                throw new SyntaxError('Unmatched close token: ' + token.body);\n\t              } else {\n\t                var err = new Token(ERROR, token.body);\n\t                if (!parent) {\n\t                  ast.push(err);\n\t                } else {\n\t                  parent.children.push(err);\n\t                }\n\t              }\n\t            } else {\n\t              parent.isClosed = true;\n\t              parent = stack.pop();\n\t            }\n\t          } else if (token.type === SELF_CLOSING) {\n\t            if (!parent) {\n\t              ast.push(token);\n\t            } else {\n\t              parent.children.push(token);\n\t            }\n\t          } else {\n\t            throw new SyntaxError('Unknown token: ' + token.type);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (parent) {\n\t        if (this.strict) {\n\t          throw new SyntaxError('Unmatched open token: ' + parent.body);\n\t        } else {\n\t          ast.push(new Token(ERROR, token.body));\n\t        }\n\t      }\n\t      return ast;\n\t    }\n\t\n\t    /**\n\t     * Internal function used to retrieve the next token from the current\n\t     * position in the input buffer.\n\t     *\n\t     * @private\n\t     * @returns {Token} returns the next Token from the input buffer\n\t     */\n\t\n\t  }, {\n\t    key: '_next',\n\t    value: function _next() {\n\t      if (!this.buf) {\n\t        return null;\n\t      }\n\t\n\t      var match = this.buf.match(rxEnclosure);\n\t\n\t      // all text\n\t      if (match === null) {\n\t        var token = new Token(TEXT, this.buf, this.pos);\n\t        this.pos += this.buf.length;\n\t        this.buf = null;\n\t        return token;\n\t      }\n\t\n\t      var tokens = [];\n\t\n\t      // first part is text\n\t      if (match.index !== 0) {\n\t        tokens.push(new Token(TEXT, this.buf.substring(0, match.index), this.pos));\n\t      }\n\t\n\t      // matching token\n\t      tokens.push(new Token(getTokenType(match[0]), match[0], this.pos + match.index));\n\t\n\t      // shorten buffer\n\t      this.buf = this.buf.substring(match.index + match[0].length);\n\t      this.pos += match.index + match[0].length;\n\t      if (this.buf.length === 0) {\n\t        this.buf = null;\n\t      }\n\t      return tokens;\n\t    }\n\t  }]);\n\t\n\t  return ShortcodeTokenizer;\n\t}();\n\t\n\texports.default = ShortcodeTokenizer;\n\t\n\t\n\tObject.assign(ShortcodeTokenizer, {\n\t  TEXT: TEXT,\n\t  ERROR: ERROR,\n\t  OPEN: OPEN,\n\t  CLOSE: CLOSE,\n\t  SELF_CLOSING: SELF_CLOSING,\n\t  rxParams: rxParams,\n\t  rxEnclosure: rxEnclosure,\n\t  rxOpen: rxOpen,\n\t  rxClose: rxClose,\n\t  rxSelfclosing: rxSelfclosing\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}