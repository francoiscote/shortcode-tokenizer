{"version":3,"sources":["shortcode-tokenizer.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","getTokenType","str","CLOSE","SELF_CLOSING","OPEN","castValue","value","replace","test","parseFloat","toLowerCase","thisIsNotDefined","_typeof","Object","defineProperty","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","Symbol","iterator","obj","constructor","TEXT","ERROR","RX_KEY","RX_PARAM","RX_PARAMS","RX_ENCLOSURE","RX_OPEN","RX_SELFCLOSING","RX_CLOSE","rxParams","RegExp","substring","rxEnclosure","rxOpen","rxClose","rxSelfclosing","Token","type","body","pos","arguments","undefined","name","children","params","isClosed","init","match","matchBody","initName","initParams","paramStr","reduce","paramToken","trim","equal","indexOf","rx","SyntaxError","token","ShortcodeTokenizer","input","options","strict","skipWhiteSpace","buf","originalBuf","_input","Error","tokens","allTokens","_next","push","apply","ast","stack","parent","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","canClose","pop","err","return","index","get","console","warn","set","default","assign"],"mappings":"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","file":"shortcode-tokenizer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"shortcodeTokenizer\"] = factory();\n\telse\n\t\troot[\"shortcodeTokenizer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @module ShortcodeTokenizer */\n\t\n\t/* tokens */\n\tvar TEXT = 'TEXT';\n\tvar ERROR = 'ERROR';\n\tvar OPEN = 'OPEN';\n\tvar CLOSE = 'CLOSE';\n\tvar SELF_CLOSING = 'SELF_CLOSING';\n\t\n\t/* eslint-disable */\n\t\n\t/* matches code name */\n\tvar RX_KEY = '[a-zA-Z][a-zA-Z0-9_-]*';\n\t\n\t/* matches paramters */\n\tvar RX_PARAM = RX_KEY + '=\\\\d+\\\\.\\\\d+' + // floats\n\t'|' + RX_KEY + '=\\\\d+' + // ints\n\t'|' + RX_KEY + '=(true|false)' + // bools\n\t'|' + RX_KEY + '=\"[^\\\\]\"]*\"' + // double-qouted strings\n\t'|' + RX_KEY + '=\\'[^\\\\]\\']*\\'' + // single-qouted strings\n\t'|' + RX_KEY; // flags\n\tvar RX_PARAMS = '(?:(?:' + RX_PARAM + ')(?:(?!\\\\s+/?\\\\])\\\\s|))+';\n\t\n\t/* matches all code token types, used for quickly\n\t   finding potentia code tokens */\n\tvar RX_ENCLOSURE = '\\\\[\\\\/?[a-zA-Z][^\\\\]]+\\\\]';\n\t/* matches opening code tokens [row] */\n\tvar RX_OPEN = '\\\\[(' + RX_KEY + ')(\\\\s' + RX_PARAMS + ')?\\\\]';\n\t/* matches self-closing code tokens [row/] */\n\tvar RX_SELFCLOSING = '\\\\[(' + RX_KEY + ')(\\\\s' + RX_PARAMS + ')?\\\\s?\\\\/\\\\]';\n\t/* matches close code tokens [/row] */\n\tvar RX_CLOSE = '\\\\[\\\\/(' + RX_KEY + ')\\\\]';\n\t\n\t/* case-insensitive regular expressions */\n\tvar rxParams = new RegExp(RX_PARAMS.substring(0, RX_PARAMS.length - 1), 'ig');\n\tvar rxEnclosure = new RegExp(RX_ENCLOSURE, 'i');\n\tvar rxOpen = new RegExp(RX_OPEN, 'i');\n\tvar rxClose = new RegExp(RX_CLOSE, 'i');\n\tvar rxSelfclosing = new RegExp(RX_SELFCLOSING, 'i');\n\t\n\t/* eslint-enable */\n\t\n\t/**\n\t * Get token type based on token-string.\n\t *\n\t * Note: assuming that this is not a TEXT token\n\t *\n\t * @param {string} str\n\t * @returns {string} token type\n\t */\n\tfunction getTokenType(str) {\n\t  if (str[1] === '/') {\n\t    return CLOSE;\n\t  }\n\t  if (str[str.length - 2] === '/') {\n\t    return SELF_CLOSING;\n\t  }\n\t  return OPEN;\n\t}\n\t\n\t/**\n\t * Casts input string to native types.\n\t *\n\t * @param {string} value\n\t * @returns {*} mixed value\n\t */\n\tfunction castValue(value) {\n\t  value = value.replace(/(^['\"]|['\"]$)/g, '');\n\t  if (/^\\d+$/.test(value)) return +value;\n\t  if (/^\\d+.\\d+$/.test(value)) return parseFloat(value);\n\t  if (/^['\"]?(true|false|yes|no)['\"]?$/i.test(value)) {\n\t    value = value.replace(/(^['\"]|['\"]$)/g, '').toLowerCase();\n\t    return value === 'true' || value === 'yes';\n\t  }\n\t  if (value === 'undefined') return typeof thisIsNotDefined === 'undefined' ? 'undefined' : _typeof(thisIsNotDefined);\n\t  if (value === 'null') return null;\n\t  return value;\n\t}\n\t\n\t/**\n\t * Token class is used both as a token during tokenization/lexing\n\t * and as a node in the resulting AST.\n\t *\n\t * @access private\n\t */\n\t\n\tvar Token = exports.Token = function () {\n\t  function Token(type, body) {\n\t    var pos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\t\n\t    _classCallCheck(this, Token);\n\t\n\t    this.name = null;\n\t    this.type = type;\n\t    this.body = body;\n\t    this.pos = pos;\n\t    this.children = [];\n\t    this.params = {};\n\t    this.isClosed = type === SELF_CLOSING;\n\t    this.init();\n\t  }\n\t\n\t  /**\n\t   * @access private\n\t   */\n\t\n\t\n\t  _createClass(Token, [{\n\t    key: 'init',\n\t    value: function init() {\n\t      if (this.type !== TEXT && this.type !== ERROR) {\n\t        var match = this.matchBody();\n\t        this.initName(match);\n\t        if (match[2]) {\n\t          this.initParams(match[2]);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * @access private\n\t     */\n\t\n\t  }, {\n\t    key: 'initName',\n\t    value: function initName(match) {\n\t      this.name = match[1];\n\t    }\n\t\n\t    /**\n\t     * @access private\n\t     */\n\t\n\t  }, {\n\t    key: 'initParams',\n\t    value: function initParams(paramStr) {\n\t      var match = paramStr.match(rxParams);\n\t      this.params = match.reduce(function (params, paramToken) {\n\t        paramToken = paramToken.trim();\n\t        var equal = paramToken.indexOf('=');\n\t        if (!~equal) {\n\t          params[paramToken] = true;\n\t        } else {\n\t          params[paramToken.substring(0, equal)] = castValue(paramToken.substring(equal + 1));\n\t        }\n\t        return params;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * @access private\n\t     */\n\t\n\t  }, {\n\t    key: 'matchBody',\n\t    value: function matchBody() {\n\t      var rx = void 0;\n\t      if (this.type === CLOSE) {\n\t        rx = rxClose;\n\t      } else if (this.type === OPEN) {\n\t        rx = rxOpen;\n\t      } else if (this.type === SELF_CLOSING) {\n\t        rx = rxSelfclosing;\n\t      } else {\n\t        throw new SyntaxError('Unknown token: ' + this.type);\n\t      }\n\t\n\t      var match = this.body.match(rx);\n\t      if (match === null) {\n\t        throw new SyntaxError('Invalid ' + this.type + ' token: ' + this.body);\n\t      }\n\t      return match;\n\t    }\n\t\n\t    /**\n\t     * Determines if this token can close the param token.\n\t     *\n\t     * @access public\n\t     * @param {Token} token another token\n\t     * @returns {boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'canClose',\n\t    value: function canClose(token) {\n\t      return this.name === token.name;\n\t    }\n\t  }]);\n\t\n\t  return Token;\n\t}();\n\t\n\t/**\n\t * Creates a new tokenizer.\n\t *\n\t * Pass in input as first param or later using `input()`\n\t *\n\t * @param {string} [input=null] Optional input to tokenize\n\t * @param {Object} [options] options object\n\t * @param {boolean} [options.strict=true] strict mode\n\t * @param {boolean} [options.skipWhiteSpace=false] will ignore tokens containing only white space (basically all \\s)\n\t */\n\t\n\t\n\tvar ShortcodeTokenizer = function () {\n\t  function ShortcodeTokenizer() {\n\t    var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { strict: true, skipWhiteSpace: false };\n\t\n\t    _classCallCheck(this, ShortcodeTokenizer);\n\t\n\t    if (typeof options === 'boolean') {\n\t      options = { strict: options, skipWhiteSpace: false };\n\t    }\n\t    this.options = options;\n\t    this.buf = null;\n\t    this.originalBuf = null;\n\t    this.pos = 0;\n\t    if (input) {\n\t      this.input(input);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @deprecated use options.strict\n\t   */\n\t\n\t\n\t  _createClass(ShortcodeTokenizer, [{\n\t    key: 'input',\n\t\n\t\n\t    /**\n\t     * Sets input buffer with a new input string.\n\t     *\n\t     * @param {string} input template string\n\t     * @throws {Error} Invalid input\n\t     * @returns {this} returns this for chaining\n\t     */\n\t    value: function input(_input) {\n\t      if (typeof _input !== 'string') {\n\t        throw new Error('Invalid input');\n\t      }\n\t\n\t      this.buf = this.originalBuf = _input;\n\t      this.pos = 0;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Resets input buffer and position to their origial values.\n\t     *\n\t     * @returns {this} returns this for chaining\n\t     */\n\t\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      this.buf = this.originalBuf;\n\t      this.pos = 0;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a token generator.\n\t     *\n\t     * @throws {Error} Invalid input\n\t     * @returns {Token[]} An array of Token instances\n\t     */\n\t\n\t  }, {\n\t    key: 'tokens',\n\t    value: function tokens() {\n\t      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      if (input) {\n\t        this.input(input);\n\t      }\n\t\n\t      if (typeof this.buf !== 'string') {\n\t        throw new Error('Invalid input');\n\t      }\n\t\n\t      var tokens = [];\n\t      var allTokens = [];\n\t      while ((tokens = this._next()) !== null) {\n\t        tokens = Array.isArray(tokens) ? tokens : [tokens];\n\t        allTokens.push.apply(allTokens, _toConsumableArray(tokens));\n\t      }\n\t      return allTokens;\n\t    }\n\t\n\t    /**\n\t     * Uses the tokens generator to build an AST from the tokens.\n\t     *\n\t     * @see tokens\n\t     * @returns {array} an array of AST roots\n\t     */\n\t\n\t  }, {\n\t    key: 'ast',\n\t    value: function ast() {\n\t      var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t      var tokens = this.tokens(input);\n\t      var stack = [];\n\t      var ast = [];\n\t      var parent = null;\n\t      var token = void 0;\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = tokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          token = _step.value;\n\t\n\t          if (token.type === TEXT) {\n\t            if (this.options.skipWhiteSpace && token.body.replace(/\\s+/g, '').length === 0) {\n\t              continue;\n\t            }\n\t            if (!parent) {\n\t              ast.push(token);\n\t            } else {\n\t              parent.children.push(token);\n\t            }\n\t          } else if (token.type === OPEN) {\n\t            if (!parent) {\n\t              parent = token;\n\t              ast.push(parent);\n\t            } else {\n\t              parent.children.push(token);\n\t              stack.push(parent);\n\t              parent = token;\n\t            }\n\t          } else if (token.type === CLOSE) {\n\t            if (!parent || !token.canClose(parent)) {\n\t              if (this.options.strict) {\n\t                throw new SyntaxError('Unmatched close token: ' + token.body);\n\t              } else {\n\t                var err = new Token(ERROR, token.body);\n\t                if (!parent) {\n\t                  ast.push(err);\n\t                } else {\n\t                  parent.children.push(err);\n\t                }\n\t              }\n\t            } else {\n\t              parent.isClosed = true;\n\t              parent = stack.pop();\n\t            }\n\t          } else if (token.type === SELF_CLOSING) {\n\t            if (!parent) {\n\t              ast.push(token);\n\t            } else {\n\t              parent.children.push(token);\n\t            }\n\t          } else {\n\t            throw new SyntaxError('Unknown token: ' + token.type);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (parent) {\n\t        if (this.options.strict) {\n\t          throw new SyntaxError('Unmatched open token: ' + parent.body);\n\t        } else {\n\t          ast.push(new Token(ERROR, token.body));\n\t        }\n\t      }\n\t      return ast;\n\t    }\n\t\n\t    /**\n\t     * Internal function used to retrieve the next token from the current\n\t     * position in the input buffer.\n\t     *\n\t     * @private\n\t     * @returns {Token} returns the next Token from the input buffer\n\t     */\n\t\n\t  }, {\n\t    key: '_next',\n\t    value: function _next() {\n\t      if (!this.buf) {\n\t        return null;\n\t      }\n\t\n\t      var match = this.buf.match(rxEnclosure);\n\t\n\t      // all text\n\t      if (match === null) {\n\t        var token = new Token(TEXT, this.buf, this.pos);\n\t        this.pos += this.buf.length;\n\t        this.buf = null;\n\t        return token;\n\t      }\n\t\n\t      var tokens = [];\n\t\n\t      // first part is text\n\t      if (match.index !== 0) {\n\t        tokens.push(new Token(TEXT, this.buf.substring(0, match.index), this.pos));\n\t      }\n\t\n\t      // matching token\n\t      tokens.push(new Token(getTokenType(match[0]), match[0], this.pos + match.index));\n\t\n\t      // shorten buffer\n\t      this.buf = this.buf.substring(match.index + match[0].length);\n\t      this.pos += match.index + match[0].length;\n\t      if (this.buf.length === 0) {\n\t        this.buf = null;\n\t      }\n\t      return tokens;\n\t    }\n\t  }, {\n\t    key: 'strict',\n\t    get: function get() {\n\t      console.warn('Deprecated: use options.strict instead');\n\t      return this.options.strict;\n\t    }\n\t\n\t    /**\n\t     * @deprecated use options.strict\n\t     */\n\t    ,\n\t    set: function set(value) {\n\t      console.warn('Deprecated: use options.strict = ' + value + ' instead');\n\t      this.options.strict = value;\n\t    }\n\t  }]);\n\t\n\t  return ShortcodeTokenizer;\n\t}();\n\t\n\texports.default = ShortcodeTokenizer;\n\t\n\t\n\tObject.assign(ShortcodeTokenizer, {\n\t  TEXT: TEXT,\n\t  ERROR: ERROR,\n\t  OPEN: OPEN,\n\t  CLOSE: CLOSE,\n\t  SELF_CLOSING: SELF_CLOSING,\n\t  rxParams: rxParams,\n\t  rxEnclosure: rxEnclosure,\n\t  rxOpen: rxOpen,\n\t  rxClose: rxClose,\n\t  rxSelfclosing: rxSelfclosing\n\t});\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}